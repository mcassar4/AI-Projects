{
    "hash": "3pTAP8ulon",
    "writeHash": "8WJ1L2UkjvWewsm",
    "versionDate": "2023-03-01T18:46:35.000Z",
    "files": {
        "domain.pddl": "(define (domain Dungeon)\n\n    (:requirements\n        :typing\n        :negative-preconditions\n        :conditional-effects\n    )\n\n    ; Do not modify the types\n    (:types\n        location colour k corridor\n    )\n\n    ; Do not modify the constants\n    (:constants\n        red yellow green purple rainbow - colour\n    )\n\n    ; You may introduce whatever predicates you would like to use\n    (:predicates\n        (hero-at ?loc - location)\n        (cor-between ?from ?to - location ?cor - corridor)\n    )\n\n    ; IMPORTANT: You should not change/add/remove the action names or parameters\n\n    ;Hero can move if the\n    ;    - hero is at current location ?from,\n    ;    - hero will move to location ?to,\n    ;    - corridor ?cor - corridor exists between the ?from and ?to locations\n    ;    - there isn't a locked door in corridor ?cor - corridor\n    ;Effects move the hero, and collapse the corridor if it's \"risky\" (also causing a mess in the ?to location)\n    (:action move\n\n        :parameters (?from ?to - location ?cor - corridor)\n\n        :precondition (and\n            (hero-at ?from) ;hero is at current location from\n            (cor-between ?from ?to ?cor) ;corridor exists between the from and to locations\n        )\n\n        :effect (and\n            ; (not (hero-at ?from))\n            (hero-at ?to) ;move the hero\n        )\n    )\n    \n    ;Hero can pick up a key if the\n    ;    - hero is at current location ?loc - location,\n    ;    - there is a key ?k - k at location ?loc - location,\n    ;    - the hero's arm is free,\n    ;    - the location is not messy\n    ;Effect will have the hero holding the key and their arm no longer being free\n    (:action pick-up\n\n        :parameters (?loc - location ?k - k)\n\n        :precondition (and\n            ; IMPLEMENT\n        )\n\n        :effect (and\n            ; IMPLEMENT\n        )\n    )\n\n    ;Hero can drop a key if the\n    ;    - hero is holding a key ?k - k,\n    ;    - the hero is at location ?loc - location\n    ;Effect will be that the hero is no longer holding the key\n    (:action drop\n\n        :parameters (?loc - location ?k - k)\n\n        :precondition (and\n            ; IMPLEMENT\n        )\n\n        :effect (and\n            ; IMPLEMENT\n        )\n    )\n\n\n    ;Hero can use a key for a corridor if\n    ;    - the hero is holding a key ?k - k,\n    ;    - the key still has some uses left,\n    ;    - the corridor ?cor - corridor is locked with colour ?col - colour,\n    ;    - the key ?k - k is if the right colour ?col - colour,\n    ;    - the hero is at location ?loc - location\n    ;    - the corridor is connected to the location ?loc - location\n    ;Effect will be that the corridor is unlocked and the key usage will be updated if necessary\n    (:action unlock\n\n        :parameters (?loc - location ?cor - corridor ?col - colour ?k - k)\n\n        :precondition (and\n            ; IMPLEMENT\n        )\n\n        :effect (and\n            ; IMPLEMENT\n        )\n    )\n\n    ;Hero can clean a location if\n    ;    - the hero is at location ?loc - location,\n    ;    - the location is messy\n    ;Effect will be that the location is no longer messy\n    (:action clean\n\n        :parameters (?loc - location)\n\n        :precondition (and\n            ; IMPLEMENT\n        )\n\n        :effect (and\n            ; IMPLEMENT\n        )\n    )\n)",
        "p01.pddl": "(define (problem p1-dungeon)\n  (:domain Dungeon)\n\n  ; Naming convention:\n  ; - loc-{i}-{j} refers to the location at the i'th column and j'th row (starting in top left corner)\n  ; - c{i}{j}{h}{k} refers to the corridor connecting loc-{i}-{j} and loc-{h}-{k}\n  (:objects\n    loc-3-1 loc-1-2 loc-2-2 loc-3-2 loc-4-2 loc-2-3 loc-3-3 loc-2-4 loc-3-4 loc-4-4 - location\n    key1 key2 key3 key4 - k\n    c3132 c1222 c2232 c3242 c2223 c3233 c2333 c2324 c3334 c2434 c3444 - corridor\n  )\n\n  (:init\n\n    ; Hero location and carrying status\n    (hero-at loc-1-2)\n\n    ; (not (hero-at loc-3-1))\n    ; (not (hero-at loc-2-2))\n    ; (not (hero-at loc-3-2))\n    ; (not (hero-at loc-4-2))\n    ; (not (hero-at loc-2-3))\n    ; (not (hero-at loc-3-3))\n    ; (not (hero-at loc-2-4))\n    ; (not (hero-at loc-3-4))\n    ; (not (hero-at loc-4-4))\n\n\n\n    ; (not (holding-key key1))\n    ; (not (holding-key key2))\n    ; (not (holding-key key3))\n    ; (not (holding-key key4))\n\n    ; All room start as clean\n    ; (not (messy loc-3-1))\n    ; (not (messy loc-1-2))\n    ; (not (messy loc-2-2))\n    ; (not (messy loc-3-2))\n    ; (not (messy loc-4-2))\n    ; (not (messy loc-2-3))\n    ; (not (messy loc-3-3))\n    ; (not (messy loc-2-4))\n    ; (not (messy loc-3-4))\n    ; (not (messy loc-4-4))\n\n\n    ; Location <> Corridor Connections\n    (cor-between loc-3-1 c3132 loc-3-2)\n    (cor-between loc-3-2 c3132 loc-3-1)\n\n    (cor-between loc-1-2 c1222 loc-2-2)\n    (cor-between loc-2-2 c1222 loc-1-2)\n\n    (cor-between loc-2-2 c2232 loc-3-2)\n    (cor-between loc-3-2 c2232 loc-2-2)\n\n    (cor-between loc-3-2 c3242 loc-4-2)\n    (cor-between loc-4-2 c3242 loc-3-2)\n\n    (cor-between loc-2-2 c2223 loc-2-3)\n    (cor-between loc-2-3 c2223 loc-2-2)\n\n    (cor-between loc-3-2 c3233 loc-3-3)\n    (cor-between loc-3-3 c3233 loc-3-2)\n\n    (cor-between loc-2-3 c2333 loc-3-3)\n    (cor-between loc-3-3 c2333 loc-2-3)\n\n    (cor-between loc-2-3 c2324 loc-2-4)\n    (cor-between loc-2-4 c2324 loc-2-3)\n\n    (cor-between loc-3-3 c3334 loc-3-4)\n    (cor-between loc-3-4 c3334 loc-3-3)\n\n    (cor-between loc-2-4 c2434 loc-3-4)\n    (cor-between loc-3-4 c2434 loc-2-4)\n\n    (cor-between loc-3-4 c3444 loc-4-4)\n    (cor-between loc-4-4 c3444 loc-3-4)\n\n\n    ; Key locations\n    (key-at red loc-2-2)\n    (key-at yellow loc-4-2)\n    (key-at rainbow loc-2-4)\n    (key-at purple loc-4-4)\n\n\n    ; Locked corridors\n    (cor-locked c3132 rainbow)\n    (cor-locked c3242 purple)\n    (cor-locked c2324 red)\n    ; (cor-locked c2434 red)\n    (cor-locked c3444 purple)\n\n\n    ; Risky corridors\n    ; (is-risky c2324)\n    ; (is-risky c2434)\n\n\n    ; Key colours\n    (key-colour key1 red)\n    (key-colour key2 yellow)\n    (key-colour key3 rainbow)\n    (key-colour key4 purple)\n\n\n    ; Key usage properties (one use, two use, etc)\n    (key-multi-use key1)\n    (key-two-use key2)\n    (key-one-use key3)\n    (key-one-use key4)\n\n  )\n  (:goal\n    (and\n      ; Hero's final location goes here\n      (hero-at loc-3-1)\n    )\n  )\n)\n",
        "p02.pddl": "(define (problem p2-dungeon)\n  (:domain Dungeon)\n\n  ; Naming convention:\n  ; - loc-{i}-{j} refers to the location at the i'th column and j'th row (starting in top left corner)\n  ; - c{i}{j}{h}{k} refers to the corridor connecting loc-{i}-{j} and loc-{h}-{k}\n  (:objects\n    loc-2-1 loc-1-2 loc-2-2 loc-3-2 loc-4-2 loc-2-3 - location\n    key1 key2 key3 key4 - k\n    c2122 c1222 c2232 c3242 c2223 - corridor\n  )\n\n  (:init\n\n    ; Hero location and carrying status\n\n    ; Locationg <> Corridor Connections\n\n    ; Key locations\n\n    ; Locked corridors\n\n    ; Risky corridors\n\n    ; Key colours\n\n    ; Key usage properties (one use, two use, etc)\n\n  )\n  (:goal\n    (and\n      ; Hero's final location goes here\n    )\n  )\n\n)\n",
        "p03.pddl": "(define (problem p3-dungeon)\n  (:domain Dungeon)\n\n  ; Naming convention:\n  ; - loc-{i}-{j} refers to the location at the i'th column and j'th row (starting in top left corner)\n  ; - c{i}{j}{h}{k} refers to the corridor connecting loc-{i}-{j} and loc-{h}-{k}\n  (:objects\n    loc-3-4 loc-4-5 loc-1-2 loc-2-2 loc-3-2 loc-3-3 loc-2-5 loc-1-3 loc-2-1 loc-1-4 loc-3-5 loc-2-4 loc-4-4 loc-2-3 loc-4-3 - location\n    c2122 c1222 c2232 c1213 c1223 c2223 c3223 c3233 c1323 c2333 c1314 c2314 c2324 c2334 c3334 c1424 c2434 c2425 c2535 c3545 c4544 c4443 - corridor\n    key1 key2 key3 key4 key5 key6 - k\n  )\n\n  (:init\n\n    ; Hero location and carrying status\n\n    ; Locationg <> Corridor Connections\n\n    ; Key locations\n\n    ; Locked corridors\n\n    ; Risky corridors\n\n    ; Key colours\n\n    ; Key usage properties (one use, two use, etc)\n\n  )\n  (:goal\n    (and\n      ; Hero's final location goes here\n    )\n  )\n\n)\n",
        "p04.pddl": "(define (problem p4-dungeon)\n  (:domain Dungeon)\n\n  ; Come up with your own problem instance (see assignment for details)\n  ; NOTE: You _may_ use new objects for this problem only.\n\n  ; Naming convention:\n  ; - loc-{i}-{j} refers to the location at the i'th column and j'th row (starting in top left corner)\n  ; - c{i}{j}{h}{k} refers to the corridor connecting loc-{i}-{j} and loc-{h}-{k}\n  (:objects\n    loc-1-1 - location\n    c1111 - corridor\n    key1 - k\n  )\n\n  (:init\n\n    ; Hero location and carrying status\n\n    ; Locationg <> Corridor Connections\n\n    ; Key locations\n\n    ; Locked corridors\n\n    ; Risky corridors\n\n    ; Key colours\n\n    ; Key usage properties (one use, two use, etc)\n\n  )\n  (:goal\n    (and\n      ; Hero's final location goes here\n    )\n  )\n\n)\n",
        "test.pddl": "(define (problem testproblem)\n  (:domain Dungeon)\n  (:objects\n    loc-1-2 loc-2-2 - location\n    key1 - k\n    c1222 - corridor\n  )\n\n  (:init\n    (hero-at loc-1-2)\n    ; (not (hero-at loc-2-2))\n    \n    (cor-between loc-1-2 loc-2-2 c1222)\n    ; (cor-between loc-2-2 loc-1-2 c1222)\n  )\n  \n  (:goal\n    (and\n        (hero-at loc-2-2)\n    )\n  )\n)\n"
    },
    "plugins": {}
}